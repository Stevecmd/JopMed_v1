services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - JOPMED_MYSQL_USER=jopmed_dev
      - JOPMED_MYSQL_PWD=jopmed_dev_pwd
      - JOPMED_MYSQL_HOST=db
      - JOPMED_MYSQL_DB=jopmed_dev_db
      - JOPMED_TYPE_STORAGE=db
      - JOPMED_API_HOST=api
      - JOPMED_API_PORT=5000
    # depends_on:
    #   - api
    #   - db
    networks:
      - jopmed_network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5000:5000"
    environment:
      - JOPMED_MYSQL_USER=jopmed_dev
      - JOPMED_MYSQL_PWD=jopmed_dev_pwd
      - JOPMED_MYSQL_HOST=db
      - JOPMED_MYSQL_DB=jopmed_dev_db
      - JOPMED_TYPE_STORAGE=db
      - JOPMED_API_HOST=0.0.0.0
      - JOPMED_API_PORT=5000
    # depends_on:
    #   - db
    networks:
      - jopmed_network

  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: jopmed_dev_db
      MYSQL_USER: jopmed_dev
      MYSQL_PASSWORD: jopmed_dev_pwd
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    entrypoint: ["/docker-entrypoint-initdb.d/init.sh"]
    networks:
      - jopmed_network

networks:
  jopmed_network:
    driver: bridge

volumes:
  db_data: